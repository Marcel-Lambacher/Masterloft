---

- name: download Helm
  get_url:
    url: 'https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz'
    dest: '/tmp/helm-{{ helm_version }}-linux-amd64.tar.gz'
    checksum: '{{ helm_checksum }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: check current version
  command: >
    /usr/local/share/helm/helm version --client --template {{ "'{{ if .Version }}{{ .Version }}{{ else }}{{ .Client.SemVer }}{{ end }}'" }}
  register: helm_current_version
  failed_when: no
  changed_when: no

- name: current version
  debug:
    msg: '{{ helm_current_version.stdout }}'
  when: helm_current_version.rc == 0

- name: remove existing installation
  become: yes
  file:
    path: '/usr/local/share/helm'
    state: absent
  when:
    - helm_current_version.rc == 0
    - helm_current_version.stdout != ('v' + helm_version)

- name: create the Helm installation dir
  become: yes
  file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: '/usr/local/share/helm'

- name: install unarchive module dependencies (apt, yum, dnf, zypper)
  become: yes
  package:
    name:
      - tar
      - unzip
      - gzip
    state: present
  when: ansible_pkg_mgr in ('apt', 'yum', 'dnf', 'zypper')

- name: install Helm
  become: yes
  unarchive:
    src: '/tmp/helm-{{ helm_version }}-linux-amd64.tar.gz'
    remote_src: yes
    dest: '/usr/local/share/helm'
    extra_opts:
      - '--strip-components=1'
    owner: root
    group: root
    mode: 'o-w'
    creates: '/usr/local/share/helm/helm'

- name: create helm link
  become: yes
  file:
    src: '/usr/local/share/helm/helm'
    dest: '/usr/local/bin/helm'
    state: link
    owner: root
    group: root
    mode: 'u=rwx,go=rx'