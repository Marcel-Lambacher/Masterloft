# loki:
#   # -- Check https://grafana.com/docs/loki/latest/configuration/#common_config for more info on how to provide a common configuration
#   commonConfig:
#     replication_factor: 1

# write:
#   replicas: 1
#   persistence:
#     storageClass: longhorn-single-replica

# read:
#   replicas: 1
#   persistence:
#     storageClass: longhorn-single-replica

# singleBinary:
#   persistence:
#     storageClass: longhorn-single-replica

fluent-bit:
  enabled: true
  resources: 
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 0m
      memory: 0Mi
  config:
    service: |
      [SERVICE]
          Daemon Off
          Flush {{ .Values.flush }}
          Log_Level {{ .Values.logLevel }}
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server On
          HTTP_Listen 0.0.0.0
          HTTP_Port {{ .Values.metricsPort }}
          Health_Check On
    ## https://docs.fluentbit.io/manual/pipeline/inputs
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.*
          Mem_Buf_Limit 2G
          Skip_Long_Lines On
      [INPUT]
          Name systemd
          Tag host.*
          Systemd_Filter _SYSTEMD_UNIT=kubelet.service
          Read_From_Tail On
          Mem_Buf_Limit 2G
    ## https://docs.fluentbit.io/manual/pipeline/filters
    filters: |
      [FILTER]
          Name kubernetes
          Match kube.*
          Merge_Log On
          Keep_Log Off
          K8S-Logging.Parser On
          K8S-Logging.Exclude On
    ## https://docs.fluentbit.io/manual/pipeline/outputs
    outputs: |
      [OUTPUT]
          Name es
          Match kube.*
          Host elasticsearch-master
          Logstash_Format On
          Retry_Limit False
      [OUTPUT]
          Name es
          Match host.*
          Host elasticsearch-master
          Logstash_Format On
          Logstash_Prefix node
          Retry_Limit False
      [Output]
          Name grafana-loki
          Match *
          Url http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
          BatchWait 1s
          BatchSize 30720 # (30KiB)
          AutoKubernetesLabels true
          RemoveKeys key1,key2

promtail:
  enabled: false

logstash:
  enabled: false
  logstashConfig:
    logstash.yml: |
      http.host: 0.0.0.0
      xpack.monitoring.enabled: false

  logstashPipeline:
    logstash.conf: |
      input {
        beats {
          port => 5044
        }
      }

      filter {
        if [kubernetes] {
          mutate {
            add_field => {
              "container" => "%{[kubernetes][container][name]}"
              "namespace" => "%{[kubernetes][namespace]}"
              "pod" => "%{[kubernetes][pod][name]}"
            }
            replace => { "host" => "%{[kubernetes][node][name]}"}
          }
        }
        mutate {
          remove_field => ["tags"]
        }
      }

      output {
        loki {
          url => "http://loki:3100/loki/api/v1/push"
        }
        # stdout { codec => rubydebug }
      }

filebeat:
  enabled: false
  resources:
    requests:
      cpu: "0m"
      memory: "0Mi"
    limits:
      cpu: "1000m"
      memory: "200Mi"
  filebeatConfig:
    filebeat.yml: |
      # logging.level: debug
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
      output.logstash:
        hosts: ["loki-logstash-headless:5044"]